define("analyzer",[],function(){function e(){this.items=[]}function t(e){this.items=e,this.sum=function(e){return e.reduce(function(e,t){return e+t},0)}(this.items),this.average=this.items.length?this.sum/this.items.length:0,this.standardDeviation=function(e,t){if(e.length==0)return 0;var n=e.map(function(e){var n=e-t;return n*n}),r=n.reduce(function(e,t){return e+t},0);return Math.sqrt(r/e.length)}(this.items,this.average)}return e.prototype.push=function(e){this.items.push(e)},e.prototype.reset=function(){this.items.length=0},e.prototype.generateReport=function(){var e=this.items.slice();return new t(e)},{Analyzer:e,AnalyzerReport:t}}),define("utilities.js",[],function(){function e(e){var t=new XMLHttpRequest;t.open("GET",e,!1),t.send();if(t.status!=200)throw"Unable to retrieve '"+e+"'.";return t.responseText}function t(e){e||(e=performance.now);var t=e(),n=0,r=0,i=e();this.getInterval=function(){return n=e(),r=n-i,i=n,r/1e3},this.getTimeElapsed=function(){return(e()-t)/1e3}}return window.performance=window.performance||{},performance.now=function(){return performance.now||performance.webkitNow||performance.mozNow||performance.msNow||performance.oNow||function(){return(new Date).getTime()}}(),window.requestAnimationFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame||window.oRequestAnimationFrame||function(e){window.setTimeout(e,1e3/60)}}(),window.cancelAnimationFrame=function(){return window.cancelRequestAnimationFrame||window.webkitCancelAnimationFrame||window.webkitCancelRequestAnimationFrame||window.mozCancelAnimationFrame||window.mozCancelRequestAnimationFrame||window.msCancelAnimationFrame||window.msCancelRequestAnimationFrame||window.oCancelAnimationFrame||window.oCancelRequestAnimationFrame||window.clearTimeout},{GET:e,Clock:t}}),define("webgl.js",[],function(){function e(e){var t=["moz-webgl","webkit-3d","experimental-webgl","webgl"],n=null;for(var r=t.length;r--&&!n;)try{n=e.getContext(t[r])}catch(i){}if(!n)throw"Unable to create WebGL context.";return n}return{getContextFrom:e}}),require.config({baseUrl:"js"}),require(["analyzer","utilities.js","webgl.js"]),define("sgl",function(){});